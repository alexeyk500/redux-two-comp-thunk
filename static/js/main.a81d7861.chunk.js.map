{"version":3,"sources":["store/Auth/actions.js","store/Auth/reducers.js","store/TodoPart/actions.js","store/TodoPart/reducers.js","store/rootReducer.jsx","components/Auth/Auth.jsx","components/Auth/AuthContainer.jsx","components/TodoPart/TodoItem/TodoItem.jsx","components/Loader/Loader.jsx","components/TodoPart/TodoPart.jsx","components/TodoPart/TodoPartContainer.jsx","App.js","index.js"],"names":["CHANGE_EMAIL","CHANGE_PASSWORD","initialState","email","password","AuthReducer","state","actions","type","payload","CHANGE_STATUS_TODO","SET_NEW_TODO_TITLE","ADD_TODO","DELETE_TODO","SET_TODO","SET_IS_LOADING","setTodo","todos","setIsLoading","status","id","title","completed","newTodoTitle","isLoading","TodoReducer","action","map","todo","filter","RootReducer","combineReducers","auth","todoPart","Auth","props","to","value","onChange","event","setEmail","target","placeholder","setPassword","onClick","preventDefault","mapDispatchToProps","connect","TodoItem","textStyle","textDecoration","style","changeStatusTodo","checked","index","deleteTodo","Loader","className","TodoList","setNewTodoTitle","addTodo","Date","now","length","getTodoThunk","newTodo","todoId","dispatch","setTimeout","axios","get","then","response","data","TodoPart","getTodo","store","createStore","applyMiddleware","thunk","App","exact","path","component","AuthContainer","TodoPartContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a81d7861.chunk.js","sourcesContent":["export const CHANGE_EMAIL = 'CHANGE_EMAIL'\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD'\n\nexport const setEmail = (email) => {\n  return ({\n    type: CHANGE_EMAIL,\n    payload: email,\n  })\n}\n\nexport const setPassword = (password) => {\n  return ({\n    type: CHANGE_PASSWORD,\n    payload: password,\n  })\n}\n","import {CHANGE_EMAIL, CHANGE_PASSWORD} from './actions'\n\nconst initialState ={\n  email: '',\n  password: '',\n}\n\nfunction AuthReducer (state=initialState, actions) {\n  switch (actions.type) {\n    case CHANGE_EMAIL: {\n      return {...state, email: actions.payload}\n    }\n    case CHANGE_PASSWORD: {\n      return {...state, password: actions.payload}\n    }\n    default: return state\n  }\n}\n\nexport default AuthReducer;\n","export const CHANGE_STATUS_TODO = 'CHANGE_STATUS_TODO';\nexport const SET_NEW_TODO_TITLE = 'SET_NEW_TODO_TITLE';\nexport const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const SET_TODO = 'SET_TODO';\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\n\nexport const changeStatusTodo = (id) => {\n  return (\n    {\n      type: CHANGE_STATUS_TODO,\n      payload: id,\n    }\n  )\n}\n\nexport const setNewTodoTitle = (title) => {\n  return (\n    {\n      type: SET_NEW_TODO_TITLE,\n      payload: title,\n    }\n  )\n}\n\nexport const addTodo = (newTodo) => {\n  return (\n    {\n      type: ADD_TODO,\n      payload: newTodo,\n    }\n  )\n}\n\nexport const deleteTodo = (todoId) => {\n  return (\n    {\n      type: DELETE_TODO,\n      payload: todoId,\n    }\n  )\n}\n\nexport const setTodo = (todos) => {\n  return (\n    {\n      type: SET_TODO,\n      payload: todos,\n    }\n  )\n}\n\nexport const setIsLoading = (status) => {\n  return (\n    {\n      type: SET_IS_LOADING,\n      payload: status\n    }\n  )\n}\n","import axios from 'axios';\nimport {setTodo, setIsLoading} from './actions'\nimport {\n  CHANGE_STATUS_TODO,\n  SET_NEW_TODO_TITLE,\n  ADD_TODO,\n  DELETE_TODO,\n  SET_TODO,\n  SET_IS_LOADING,\n} from './actions';\n\nconst initialState = {\n  todos: [\n    {id:1, title:'Купить Хлеба', completed:false},\n    {id:2, title:'Купить Молока', completed:true},\n    {id:3, title:'Купить Памперсы', completed:false},\n  ],\n  newTodoTitle: '',\n  isLoading: false,\n}\n\nfunction TodoReducer (state=initialState, action) {\n  switch (action.type) {\n    case SET_NEW_TODO_TITLE : {\n      return {...state, newTodoTitle: action.payload}\n    }\n    case ADD_TODO: {\n      return (\n        {\n          ...state, todos: [...state.todos, action.payload]\n        }\n      )\n    }\n    case CHANGE_STATUS_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map(todo=>{\n          if (todo.id === action.payload) {\n            todo.completed = !todo.completed\n          }\n          return todo\n        })\n      }\n    }\n    case DELETE_TODO : {\n      return {\n        ...state,\n        todos: state.todos.filter(todo=> todo.id !== action.payload)\n      }\n    }\n    case SET_TODO : {\n      return {...state, todos: action.payload}\n    }\n    case SET_IS_LOADING : {\n      return {...state, isLoading: action.payload}\n    }\n\n    default: return state\n  }\n}\n\nexport const getTodoThunk = () => {\n  return (dispatch) =>{\n    dispatch(setIsLoading(true))\n    dispatch(setTodo([]))\n    setTimeout(()=>{\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => {\n        dispatch(setTodo(response.data))\n        dispatch(setIsLoading(false))\n        }\n      // fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      // .then(response => response.json())\n      // .then(json => {\n      //   dispatch(setTodo(json))\n      //   dispatch(setIsLoading(false))\n      // })\n    )},500)\n  }\n}\n\nexport default TodoReducer;\n","import {combineReducers} from 'redux';\nimport AuthReducer from './Auth/reducers';\nimport TodoReducer from './TodoPart/reducers';\n\nconst RootReducer = combineReducers({\n  auth: AuthReducer,\n  todoPart:TodoReducer,\n})\n\nexport default RootReducer;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nfunction Auth (props) {\n  const onChangeEmail = (event) => {\n    props.setEmail(event.target.value)\n  }\n\n  const onChangePassword = (event) => {\n    props.setPassword(event.target.value)\n  }\n\n  if (props.password === '123') {\n    return <Redirect to='/todo' />\n  }\n\n  return(\n    <div>\n      <form>\n        <div>\n          <h3>Authorisation Form</h3>\n          <input\n            type='text'\n            value={props.email}\n            onChange={onChangeEmail}\n            placeholder='email'\n          />\n        </div>\n        <div>\n          <input\n            type='text'\n            value={props.password}\n            onChange={onChangePassword}\n            placeholder='password'\n          />\n        </div>\n        <button\n          type='submit'\n          onClick={(event)=>event.preventDefault()}>Authorisation</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Auth;\n","import React from 'react';\nimport Auth from './Auth';\n\nimport {connect} from 'react-redux';\nimport {setEmail, setPassword} from './../../store/Auth/actions'\n\nfunction AuthContainer (props){\n  return (\n    <Auth\n      email={props.email}\n      password={props.password}\n      setEmail={props.setEmail}\n      setPassword={props.setPassword}\n    />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return(\n    {\n      email: state.auth.email,\n      password: state.auth.password,\n    }\n  )\n}\n\nconst mapDispatchToProps = {\n  setEmail,\n  setPassword,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer)\n\n\n","import React from 'react';\n\nfunction TodoItem (props) {\n\n  const onChangeCheckbox = () =>{\n    props.changeStatusTodo(props.todo.id)\n  }\n\n  const onClickDeletetodo =() =>{\n    props.deleteTodo(props.todo.id)\n  }\n\n  let textStyle = {}\n  if (props.todo.completed) {\n    textStyle={textDecoration: 'line-through solid red'}\n  }\n\n  return (\n    <li style={textStyle} key={props.todo.id}>\n      <span>\n        <input\n          type ='checkbox'\n          onChange = {onChangeCheckbox}\n          checked = {props.todo.completed}\n        />\n        &nbsp;\n        {props.index}\n        &nbsp;\n        {props.todo.title}\n        &nbsp;\n      </span>\n      <button onClick={onClickDeletetodo}>&times;</button>\n    </li>\n  )\n}\n\nexport default TodoItem;\n","import './Loader.css';\n\nimport React from 'react';\n\nfunction Loader (){\n  return(\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  )\n}\n\nexport default Loader\n","import React from 'react';\nimport TodoItem from './TodoItem/TodoItem';\nimport Loader from './../Loader/Loader';\n\nfunction TodoList (props) {\n  const onChangenewTodoTitle = (event) => {\n    props.setNewTodoTitle(event.target.value)\n  }\n\n  const onClickAddTodo = (event) => {\n    event.preventDefault();\n    props.addTodo({id: Date.now(), title: props.newTodoTitle, completed: false});\n    props.setNewTodoTitle('');\n  }\n\n  return(\n    <div>\n      <h3>My Todo List</h3>\n      <form>\n        <input\n          type='text'\n          value={props.newTodoTitle}\n          onChange={onChangenewTodoTitle}\n          placeholder='Title for Todo'\n        />\n        <button type='submit' onClick={onClickAddTodo} >Add Todo</button>\n      </form>\n      <hr />\n      <ul>\n      {props.isLoading && < Loader />}\n      {props.todos.length?\n        props.todos.map((todo, index)=>{\n          return (\n            <TodoItem\n              key={todo.id}\n              index={index+1}\n              todo={todo}\n              changeStatusTodo = {props.changeStatusTodo}\n              deleteTodo = {props.deleteTodo}\n            />\n          )\n        })\n        : props.isLoading? null :<p>No Todos ...</p>\n      }\n      </ul>\n      <hr />\n      <div>\n      <button onClick={props.getTodoThunk}>Load Todo</button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default TodoList\n","import React from 'react';\nimport TodoPart from './TodoPart';\nimport {connect} from 'react-redux';\nimport {\n  changeStatusTodo,\n  setNewTodoTitle,\n  addTodo,\n  deleteTodo,\n  setTodo,\n  setIsLoading,\n} from './../../store/TodoPart/actions';\nimport {getTodoThunk} from './../../store/TodoPart/reducers'\n\nfunction TodoPartContainer (props) {\n  return (\n    < TodoPart\n      todos = {props.todos}\n      newTodoTitle = {props.newTodoTitle}\n      isLoading = {props.isLoading}\n      changeStatusTodo = {props.changeStatusTodo}\n      setNewTodoTitle = {props.setNewTodoTitle}\n      addTodo = {props.addTodo}\n      deleteTodo = {props.deleteTodo}\n      getTodo = {props.getTodo}\n      setTodo = {props.setTodo}\n      setIsLoading = {props.setIsLoading}\n      getTodoThunk = {props.getTodoThunk}\n    />\n  )\n}\n\nconst mapStateToProps = (state) =>{\n  return(\n    {\n      todos: state.todoPart.todos,\n      newTodoTitle: state.todoPart.newTodoTitle,\n      isLoading: state.todoPart.isLoading,\n    }\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusTodo,\n  setNewTodoTitle,\n  addTodo,\n  deleteTodo,\n  setTodo,\n  setIsLoading,\n  getTodoThunk,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoPartContainer);\n","import React from 'react';\nimport {createStore, applyMiddleware} from 'redux';\nimport RootReducer from './store/rootReducer';\nimport {Provider} from 'react-redux';\nimport AuthContainer from './components/Auth/AuthContainer';\nimport TodoPartContainer from './components/TodoPart/TodoPartContainer';\nimport thunk from 'redux-thunk';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\n\nconst store = createStore(RootReducer, applyMiddleware(thunk))\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div>\n          <Route exact path='/' component={AuthContainer} />\n          <p></p>\n          <Route path='/todo' component={TodoPartContainer} />\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}